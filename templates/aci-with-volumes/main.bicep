// Azure Files ボリュームマウント付き Container Instances デプロイメント
// このテンプレートは永続化ストレージを持つ Container Instance を作成します

@description('コンテナグループの名前')
param containerGroupName string = 'aci-volumes-${uniqueString(resourceGroup().id)}'

@description('コンテナイメージの名前')
param containerImage string = 'mcr.microsoft.com/azuredocs/aci-helloworld:latest'

@description('CPU コア数')
@allowed([1, 2, 4])
param cpuCores int = 1

@description('メモリサイズ（GB）')
@allowed([1, 2, 4, 8])
param memoryInGb int = 2

@description('コンテナのポート番号')
param containerPort int = 80

@description('デプロイメントのリージョン')
param location string = resourceGroup().location

@description('環境タグ')
param environmentName string = 'development'

@description('ストレージアカウント名')
param storageAccountName string = 'acistorage${uniqueString(resourceGroup().id)}'

@description('Azure Files 共有名')
param fileShareName string = 'acifiles'

@description('ボリュームマウントパス')
param mountPath string = '/mnt/azurefiles'

@description('DNS 名ラベル')
param dnsNameLabel string = '${containerGroupName}-${uniqueString(resourceGroup().id)}'

@description('ヘルスチェックを有効にするか')
param enableHealthCheck bool = true

// ストレージアカウントの作成
resource storageAccount 'Microsoft.Storage/storageAccounts@2023-01-01' = {
  name: storageAccountName
  location: location
  tags: {
    environment: environmentName
    'azd-env-name': environmentName
  }
  sku: {
    name: 'Standard_LRS'
  }
  kind: 'StorageV2'
  properties: {
    accessTier: 'Hot'
    allowBlobPublicAccess: false
    allowSharedKeyAccess: true
    minimumTlsVersion: 'TLS1_2'
    supportsHttpsTrafficOnly: true
    networkAcls: {
      defaultAction: 'Allow'
    }
  }
}

// Azure Files サービスの作成
resource fileService 'Microsoft.Storage/storageAccounts/fileServices@2023-01-01' = {
  parent: storageAccount
  name: 'default'
  properties: {
    shareDeleteRetentionPolicy: {
      enabled: true
      days: 7
    }
  }
}

// ファイル共有の作成
resource fileShare 'Microsoft.Storage/storageAccounts/fileServices/shares@2023-01-01' = {
  parent: fileService
  name: fileShareName
  properties: {
    quota: 5 // 5GB のクォータ
    enabledProtocols: 'SMB'
    accessTier: 'Hot'
  }
}

// Container Group リソースの作成
resource containerGroup 'Microsoft.ContainerInstance/containerGroups@2023-05-01' = {
  name: containerGroupName
  location: location
  tags: {
    environment: environmentName
    'azd-env-name': environmentName
  }
  properties: {
    // OS タイプの指定
    osType: 'Linux'

    // 再起動ポリシー
    restartPolicy: 'OnFailure'

    // SKU の指定
    sku: 'Standard'

    // コンテナの定義
    containers: [
      {
        name: 'app-container'
        properties: {
          image: containerImage
          resources: {
            requests: {
              cpu: cpuCores
              memoryInGB: memoryInGb
            }
            limits: {
              cpu: cpuCores * 2
              memoryInGB: memoryInGb * 2
            }
          }
          ports: [
            {
              port: containerPort
              protocol: 'TCP'
            }
          ]
          // 環境変数の設定
          environmentVariables: [
            {
              name: 'ENVIRONMENT'
              value: environmentName
            }
            {
              name: 'PORT'
              value: string(containerPort)
            }
            {
              name: 'MOUNT_PATH'
              value: mountPath
            }
          ]
          // ボリュームマウントの設定
          volumeMounts: [
            {
              name: 'azurefiles'
              mountPath: mountPath
              readOnly: false
            }
          ]
          // ヘルスチェックの設定
          livenessProbe: enableHealthCheck
            ? {
                httpGet: {
                  path: '/'
                  port: containerPort
                  scheme: 'http'
                }
                initialDelaySeconds: 30
                periodSeconds: 30
                timeoutSeconds: 10
                failureThreshold: 3
              }
            : null
          readinessProbe: enableHealthCheck
            ? {
                httpGet: {
                  path: '/'
                  port: containerPort
                  scheme: 'http'
                }
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 3
              }
            : null
        }
      }
    ]

    // ボリューム定義
    volumes: [
      {
        name: 'azurefiles'
        azureFile: {
          shareName: fileShareName
          storageAccountName: storageAccountName
          storageAccountKey: storageAccount.listKeys().keys[0].value
          readOnly: false
        }
      }
    ]

    // IP アドレス設定
    ipAddress: {
      type: 'Public'
      ports: [
        {
          port: containerPort
          protocol: 'TCP'
        }
      ]
      dnsNameLabel: dnsNameLabel
      autoGeneratedDomainNameLabelScope: 'TenantReuse'
    }
  }
}

// アウトプット
@description('コンテナグループの FQDN')
output fqdn string = containerGroup.properties.ipAddress.fqdn

@description('コンテナグループのパブリック IP アドレス')
output ipAddress string = containerGroup.properties.ipAddress.ip

@description('コンテナグループの URL')
output url string = 'http://${containerGroup.properties.ipAddress.fqdn}:${containerPort}'

@description('ストレージアカウント名')
output storageAccountName string = storageAccount.name

@description('ファイル共有名')
output fileShareName string = fileShare.name

@description('ボリュームマウントパス')
output mountPath string = mountPath

@description('コンテナグループのリソース ID')
output resourceId string = containerGroup.id

@description('ストレージアカウントのリソース ID')
output storageAccountResourceId string = storageAccount.id
