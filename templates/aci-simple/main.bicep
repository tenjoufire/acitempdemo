// シンプルな Azure Container Instances デプロイメント
// このテンプレートは基本的な Container Instance を作成します

@description('コンテナグループの名前')
param containerGroupName string = 'aci-${uniqueString(resourceGroup().id)}'

@description('コンテナイメージの名前')
param containerImage string = 'mcr.microsoft.com/azuredocs/aci-helloworld:latest'

@description('CPU コア数')
@allowed([1, 2, 4])
param cpuCores int = 1

@description('メモリサイズ（GB）')
@allowed([1, 2, 4, 8])
param memoryInGb int = 1

@description('コンテナのポート番号')
param containerPort int = 80

@description('デプロイメントのリージョン')
param location string = resourceGroup().location

@description('環境タグ')
param environmentName string = 'development'

@description('パブリック IP アドレスタイプ')
@allowed(['Public', 'Private'])
param ipAddressType string = 'Public'

@description('DNS 名ラベル')
param dnsNameLabel string = '${containerGroupName}-${uniqueString(resourceGroup().id)}'

// Container Group リソースの作成
resource containerGroup 'Microsoft.ContainerInstance/containerGroups@2023-05-01' = {
  name: containerGroupName
  location: location
  tags: {
    environment: environmentName
    'azd-env-name': environmentName
  }
  properties: {
    // OS タイプの指定
    osType: 'Linux'

    // 再起動ポリシー
    restartPolicy: 'OnFailure'

    // SKU の指定
    sku: 'Standard'

    // コンテナの定義
    containers: [
      {
        name: 'app-container'
        properties: {
          image: containerImage
          resources: {
            requests: {
              cpu: cpuCores
              memoryInGB: memoryInGb
            }
          }
          ports: [
            {
              port: containerPort
              protocol: 'TCP'
            }
          ]
          // 環境変数の設定
          environmentVariables: [
            {
              name: 'ENVIRONMENT'
              value: environmentName
            }
            {
              name: 'PORT'
              value: string(containerPort)
            }
          ]
        }
      }
    ]

    // IP アドレス設定
    ipAddress: {
      type: ipAddressType
      ports: [
        {
          port: containerPort
          protocol: 'TCP'
        }
      ]
      dnsNameLabel: dnsNameLabel
      autoGeneratedDomainNameLabelScope: 'TenantReuse'
    }
  }
}

// アウトプット
@description('コンテナグループの FQDN')
output fqdn string = containerGroup.properties.ipAddress.fqdn

@description('コンテナグループのパブリック IP アドレス')
output ipAddress string = containerGroup.properties.ipAddress.ip

@description('コンテナグループの URL')
output url string = 'http://${containerGroup.properties.ipAddress.fqdn}:${containerPort}'

@description('コンテナグループのリソース ID')
output resourceId string = containerGroup.id
